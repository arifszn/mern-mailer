{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/Landing.js","components/SurveyList.js","components/Dashboard.js","components/SurveyNew.js","components/App.js","reducers/index.js","reducers/authReducer.js","reducers/surveysReducer.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","fetchSurveys","connect","actions","props","name","description","amount","stripeKey","process","className","Header","this","authReducer","href","key","credits","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","renderContent","Component","state","Landing","style","textAlign","surveys","surveysReducer","useEffect","reverse","map","survey","_id","title","body","Date","dateSent","toLocaleDateString","Dashboard","useState","subject","recipients","setState","history","useHistory","forceUpdate","simpleValidator","useRef","SimpleReactValidator","autoForceUpdate","validators","customEmail","message","rule","val","params","validator","re","split","email","trim","filter","test","length","onChangeHandle","e","target","value","onSubmitHandle","preventDefault","current","allValid","Axios","push","console","log","response","alert","error","showMessages","onSubmit","onChange","placeholder","rows","exact","path","component","SurveyNew","combineReducers","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.b54a8de4.chunk.js","sourcesContent":["import axios from 'axios';\nimport {FETCH_USER} from './types'\nimport {FETCH_SURVEYS} from './types'\n\nexport const fetchUser = () => {\n    return async (dispatch) => {\n        const res = await axios.get('/api/current_user');\n\n        dispatch({type: FETCH_USER, payload: res.data});\n    };\n};\n\nexport const handleToken = (token) => {\n    return async (dispatch) => {\n        const res = await axios.post('/api/stripe', token);\n\n        dispatch({type: FETCH_USER, payload: res.data});\n    };\n};\n\nexport const fetchSurveys = () => {\n    return async (dispatch) => {\n        const res = await axios.get('/api/surveys');\n        dispatch({type: FETCH_SURVEYS, payload: res.data});\n    };\n};","export const FETCH_USER = 'fetch_user';\nexport const FETCH_SURVEYS = 'fetch_surveys';","import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nconst Payments = (props) => {\r\n    return (\r\n        <StripeCheckout\r\n            name=\"Mern Mailer\"\r\n            description=\"$5 for 5 email credit\"\r\n            amount={500} // cents\r\n            token={token => props.handleToken(token)}\r\n            stripeKey={process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY}\r\n        >\r\n            <button className=\"btn btn-success btn-block\">\r\n                Add Credits\r\n            </button>\r\n        </StripeCheckout>\r\n    );\r\n};\r\n\r\nexport default connect(null, actions)(Payments);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport Payments from './Payments';\n\nclass Header extends Component {\n    renderContent() {\n        switch (this.props.authReducer) {\n            case null:\n                return;\n            case false:\n                \n                return <li className=\"nav-item\"><a className=\"nav-link\" href=\"/auth/google\"><button className=\"btn btn-outline-info btn-block\">Login With Google</button></a></li>;\n            default:\n                return [\n                    <li key=\"2\" className=\"form-inline\"><a className=\"nav-link\">Credits: {this.props.authReducer.credits}</a></li>,\n                    <li key=\"1\" className=\"nav-item\"><a className=\"nav-link\"><Payments/></a></li>,\n                    <li key=\"3\" className=\"nav-item\"><a className=\"nav-link\" href=\"/api/logout\"><button className=\"btn btn-outline-secondary btn-block\">Logout</button></a></li>\n                ];\n        }\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <Link to={this.props.authReducer ? '/surveys' : '/'}\n                     className=\"navbar-brand\"\n                     >Mern Mailer</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav ml-auto\">\n                        {this.renderContent()}\n                    </ul>\n                </div>\n            </nav>\n        );\n    };\n};\n\nfunction mapStateToProp(state) {\n    return {\n        authReducer: state.authReducer\n    }\n    \n}\nexport default connect(mapStateToProp)(Header);","import React from 'react';\n\nconst Landing = () => {\n    return (\n        <div style={{textAlign: 'center'}}>\n            <h1>HEY</h1>\n            Collect feedback\n        </div>\n        \n    );\n};\n\n\nexport default Landing;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSurveys } from '../actions/index';\n\nconst SurveyList = (props) => {\n    useEffect(() => {\n        props.fetchSurveys();       \n    }, []);\n\n    const renderSurvey = () =>{\n        return props.surveys.reverse().map(survey => {\n            return (\n                <div className=\"card\" key={survey._id}>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{survey.title}</h5>\n                        <p className=\"card-text\">{survey.body}</p>\n                        <span  className=\"card-link\">Sent On: {new Date(survey.dateSent).toLocaleDateString()} </span>\n                    </div>\n                </div>\n            )\n        });\n    }\n\n    return (\n        <div>\n            {renderSurvey()}\n        </div>\n    );\n};\n\nfunction mapStateToProps(state) {\n    return {\n        surveys: state.surveysReducer\n    }\n}\n\nexport default connect(mapStateToProps, {fetchSurveys})(SurveyList);","import React from 'react';\nimport './Dashboard.css';\nimport { Link } from 'react-router-dom';\nimport SurveyList from './SurveyList';\n\nconst Dashboard = (props) => {\n    return (\n        <div>\n            <SurveyList/>\n            <Link to=\"surveys/new\">\n                <button className=\"fixed-button wobble\" type=\"button\">\n                    <i className=\"fa fa-plus\"></i>\n                </button>\n            </Link>\n        </div>\n    );\n};\n\nexport default Dashboard;","import React, { useState, useEffect, useRef } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\nimport SimpleReactValidator from 'simple-react-validator';\nimport Axios from 'axios';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index'\n\nconst SurveyNew = (props) => {\n    const [state, setState] = useState({\n        title: '',\n        subject: '',\n        body: '',\n        recipients: ''\n    });\n\n    let history = useHistory();\n    //validator\n    const [, forceUpdate] = useState() //this is a dummy state, when form submitted, change the state so that message is rendered\n    const simpleValidator = useRef(new SimpleReactValidator({\n            autoForceUpdate: {forceUpdate: forceUpdate},\n            className: 'small text-danger fa fa-exclamation-triangle pt-1 pl-1',\n            validators: {\n                customEmail: { // name the rule\n                    message: 'Invalid recipients', // give a message that will display when there is an error. :attribute will be replaced by the name you supply in calling it.\n                    rule: function(val, params, validator) { // return true if it is succeeds and false it if fails validation.\n                        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n                        const invalidEmails = val.split(',')\n                                                .map(email => email.trim())\n                                                .filter(email => re.test(email) === false)\n                                                \n                        if (invalidEmails.length) {\n                            return false;\n                        }\n                        return true;\n                    }\n                }\n            }\n    }));\n\n    const onChangeHandle = (e) =>{\n        const { name, value } = e.target;\n        setState({\n            ...state,\n            [name] : value\n        });\n    }\n\n    const onSubmitHandle = async (e) =>{\n        e.preventDefault();\n        \n        if (simpleValidator.current.allValid()) {\n            try {\n                const res = await Axios.post('/api/surveys', state);\n                props.fetchUser();\n                history.push('/surveys');\n                \n            } catch (error) {\n                console.log(error.response);\n                alert(error.response.data.error)\n            }\n            \n        } else {\n            simpleValidator.current.showMessages();\n            forceUpdate(1);\n        }\n\n    }\n\n    return (\n        <div>\n            <div className=\"container pt-3\">\n                <div className=\"row d-flex justify-content-center\">\n                    <div className=\"col-md-8\">\n                        <form onSubmit={onSubmitHandle}>\n                            <div className=\"form-group\">\n                                <ul className=\"nav nav-tabs nav-pills c--nav-pills nav-justified\">\n                                    <li className=\"nav-item\">\n                                        <span className=\"nav-link btn btn-info btn-block active\">New Survey</span>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div className=\"form-group\">\n                                <label >Survey Title</label>\n                                <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" value={state.title} onChange={onChangeHandle} placeholder=\"Survey Title\" />\n                                {simpleValidator.current.message('name', state.title, 'required')}\n                            </div>\n                            <div className=\"form-group\">\n                                <label >Email Subject</label>\n                                <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Email Subject\" name=\"subject\" value={state.subject} onChange={onChangeHandle}/>\n                                {simpleValidator.current.message('subject', state.subject, 'required')}\n                            </div>\n                            <div className=\"form-group\">\n                                <label >Email Body</label>\n                                <textarea className=\"form-control\" id=\"body\" placeholder=\"Email Body\" rows=\"3\" name=\"body\" value={state.body} onChange={onChangeHandle}></textarea>\n                                {simpleValidator.current.message('body', state.body, 'required')}\n                            </div>\n                            <div className=\"form-group\">\n                                <label >Recipients</label>\n                                <textarea className=\"form-control\" id=\"recipients\" placeholder=\"Example: a@example.com, b@example.com\" rows=\"3\" name=\"recipients\" value={state.recipients} onChange={onChangeHandle}></textarea>\n                                {simpleValidator.current.message('recipients', state.recipients, 'required|customEmail')}\n                            </div>\n                            <div className=\"form-group text-center\">\n                                <button type=\"submit\" className=\"btn btn-success mr-2\">Send</button>\n                                <Link className=\"btn btn btn-info\" to=\"/surveys\">Cancel</Link>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nexport default connect(null, actions)(SurveyNew)","import React, { useEffect } from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Header from '../components/Header';\nimport Landing from '../components/Landing';\nimport Dashboard from '../components/Dashboard';\nimport SurveyNew from '../components/SurveyNew';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index'\n\nconst App = (props) => {\n    useEffect(() => {\n        props.fetchUser();       \n    }, []);\n\n    return (\n        <div>\n            <BrowserRouter>\n                <div>\n                    <Header/>\n                    <Route exact path=\"/\" component={Landing}/>\n                    <Route exact path=\"/surveys\" component={Dashboard}/>\n                    <Route exact path=\"/surveys/new\" component={SurveyNew}/>\n                </div>\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default connect(null, actions) (App);","import {combineReducers} from 'redux';\nimport authReducer from './authReducer';\nimport surveysReducer from './surveysReducer';\n\nexport default combineReducers({\n    authReducer: authReducer,\n    surveysReducer: surveysReducer\n});","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n    \n    switch (action.type) {\n        case FETCH_USER:\n            return action.payload || false;\n        default:\n            return state;\n    }\n};","import { FETCH_SURVEYS } from '../actions/types';\n\nexport default function(state = [], action) {\n    \n    switch (action.type) {\n        case FETCH_SURVEYS:\n            return action.payload;\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport App from './components/App';\nimport reducers from './reducers/index';\nimport reduxThunk from 'redux-thunk';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDom.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n, document.querySelector('#root'));"],"sourceRoot":""}